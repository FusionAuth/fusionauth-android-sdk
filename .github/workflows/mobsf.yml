# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Vulnerability Scan with MobSF

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 6 * * 1'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  mobile-security:
    name: MobSF Scan
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1

      # Sets up the python as a prerequisites for MobSF
      - name: Setup python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.8

      # Sets up the reviewdog cli
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1.2.0

      - name: Show reviewdog version
        run: reviewdog -version

      # Performs analysis using MobSF and outputs a Sarif Report
      - name: Run mobsfscan
        uses: MobSF/mobsfscan@e29e85c36fa1aa950d7f1b1064345d94a70b2a28
        with:
          args: . --sarif --output mobsf.sarif.json || true

      # Uploads Sarif Report to GitHub
      - name: Upload mobsfscan report
        uses: github/codeql-action/upload-sarif@v3.23.1
        if: success() || failure()
        with:
          sarif_file: mobsf.sarif.json

      # Process Sarif Report file from MobSF with reviewdog cli
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEW_TOKEN }}
        if: success() || failure()
        run: reviewdog -f=sarif -diff="git diff FETCH_HEAD" -name="mobsf" -reporter=github-pr-review < mobsf.sarif.json
